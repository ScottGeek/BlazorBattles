@page "/army"
@inject IUnitService unitService
@attribute [Authorize]
<h3>My Army</h3>

@if (unitService.Units.Count > 0)
{
    <table class="table">
        @if (unitService.MyUnits.Count > 0)
        {
            @foreach (var userUnit in unitService.MyUnits)
            {
                <tr>
                    <td>
                        @switch (userUnit.UnitId)
                        {
                            case 1:
                                <img src="icons/knight.png" />
                                break;
                            case 2:
                                <img src="icons/archer.png" />
                                break;
                            case 3:
                                <img src="icons/mage.png" />
                                break;
                        }
                    </td>
                    <td>
                        @unitService.Units.First(unit => unit.Id == userUnit.UnitId).Title
                    </td>
                    <td>
                        @userUnit.HitPoints HP
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td>You have no units in your Army. You should build some!</td>
                <td></td>
                <td></td>
            </tr>
        }
    </table>
    <center>
       <button class="btn btn-warning" @onclick="ReviveArmy">Rivive Your Army for 1000 Bananas</button> 
    </center>
}
else
{
    <span>Loading Units....</span>
}
@code {

    protected override async Task OnInitializedAsync()
    {
        await unitService.LoadUnitAsync();
        await unitService.LoadUserUnitsAsync();

    }

private async Task ReviveArmy()
    {
        await unitService.ReviveArmy();
    }

}
