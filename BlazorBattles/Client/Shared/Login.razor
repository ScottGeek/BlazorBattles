@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider authenticationStateProvider
@inject IAuthService authService
@inject IToastService toastService

Please Login below or <a href="register">Register</a> for a new account.

<EditForm Model="user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class=form-control></InputText>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class=form-control type="password"></InputText>
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
    <ValidationSummary />
</EditForm>

@code {


    private UserLogin user = new UserLogin();

    private async void HandleLogin()
    {

        var result = await authService.Login(user);
        if (result.Success)
        {
            await localStorage.SetItemAsync<string>("authToken", result.Data);
            await authenticationStateProvider.GetAuthenticationStateAsync();
        }
        else
        {
            toastService.ShowError(result.Message);
        }


    }

}
